import{_ as e,o as n,c as s,Q as a}from"./chunks/framework.7cd3ab18.js";const g=JSON.parse('{"title":"Comments","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/comments.md","filePath":"introduction/comments.md"}'),t={name:"introduction/comments.md"},o=a(`<h1 id="comments" tabindex="-1">Comments <a class="header-anchor" href="#comments" aria-label="Permalink to &quot;Comments&quot;">​</a></h1><p>Comments are useful for understanding code, making comments and explanations, taking notes, and sometimes writing little jokes.</p><p>In general, two types of comment lines appear in programming languages: singleline comment and multiline comment. Some programming languages only support one. Jule supports both of these common approaches.</p><h2 id="singleline-comments" tabindex="-1">Singleline Comments <a class="header-anchor" href="#singleline-comments" aria-label="Permalink to &quot;Singleline Comments&quot;">​</a></h2><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">// Singleline comment</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="multiline-comments" tabindex="-1">Multiline Comments <a class="header-anchor" href="#multiline-comments" aria-label="Permalink to &quot;Multiline Comments&quot;">​</a></h2><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">  Multiline</span></span>
<span class="line"><span style="color:#6A737D;">  Comment</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,7),l=[o];function i(m,r,c,p,d,u){return n(),s("div",null,l)}const b=e(t,[["render",i]]);export{g as __pageData,b as default};
