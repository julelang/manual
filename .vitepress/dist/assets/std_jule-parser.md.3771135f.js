import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.7cd3ab18.js";const m=JSON.parse('{"title":"std::jule::parser","description":"","frontmatter":{},"headers":[],"relativePath":"std/jule-parser.md","filePath":"std/jule-parser.md"}'),l={name:"std/jule-parser.md"},p=e(`<h1 id="std-jule-parser" tabindex="-1">std::jule::parser <a class="header-anchor" href="#std-jule-parser" aria-label="Permalink to &quot;std::jule::parser&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">parse_file</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">mut</span><span style="color:#E1E4E8;"> f: </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">File): </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">FileInfo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Parses fileset&#39;s tokens and builds AST.<br> Returns nil if f is not real.</p><hr><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">parse_package</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">mut</span><span style="color:#E1E4E8;"> filesets: []</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">File): </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">PackageInfo</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Parses fileset&#39;s tokens and builds AST.<br> Returns nil if filesets is nil.<br> Skip fileset if nil.</p><h2 id="structs" tabindex="-1">Structs <a class="header-anchor" href="#structs" aria-label="Permalink to &quot;Structs&quot;">​</a></h2><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> FileInfo {</span></span>
<span class="line"><span style="color:#E1E4E8;">    ast:    </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">Ast  </span><span style="color:#6A737D;">// Ast from std::jule::ast</span></span>
<span class="line"><span style="color:#E1E4E8;">    errors: []Log </span><span style="color:#6A737D;">// Log from std::jule::build</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Stores information about file parsing.</p><hr><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> PackageInfo {</span></span>
<span class="line"><span style="color:#E1E4E8;">    files: []</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">FileInfo</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Stores information about package parsing.</p>`,13),r=[p];function o(t,i,c,u,d,E){return a(),n("div",null,r)}const y=s(l,[["render",o]]);export{m as __pageData,y as default};
