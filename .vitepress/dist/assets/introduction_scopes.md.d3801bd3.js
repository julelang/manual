import{_ as s,o as e,c as n,Q as a}from"./chunks/framework.7cd3ab18.js";const m=JSON.parse('{"title":"Scopes","description":"","frontmatter":{},"headers":[],"relativePath":"introduction/scopes.md","filePath":"introduction/scopes.md"}'),o={name:"introduction/scopes.md"},p=a(`<h1 id="scopes" tabindex="-1">Scopes <a class="header-anchor" href="#scopes" aria-label="Permalink to &quot;Scopes&quot;">​</a></h1><p>Scopes (aka code blocks or blocks) are indicated by braces, except in exceptional cases. Although a scope is often used to denote an algorithm domain, it is also used for other purposes.</p><h2 id="anonymous-scopes" tabindex="-1">Anonymous Scopes <a class="header-anchor" href="#anonymous-scopes" aria-label="Permalink to &quot;Anonymous Scopes&quot;">​</a></h2><p>Anonymous scopes are scopes that do not belong to a definition (function, etc.).</p><p>For example:</p><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Anonymous scope</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>The above example shows an anonymous scope contained within the scope of the <code>main</code> function.</p><h2 id="deferred-scopes" tabindex="-1">Deferred Scopes <a class="header-anchor" href="#deferred-scopes" aria-label="Permalink to &quot;Deferred Scopes&quot;">​</a></h2><p>Deferred scopes are scopes whose execution is deferred until the scope they are in expires. Declares with the <code>defer</code> keyword.</p><p>For example:</p><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">defer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">outln</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello Defer&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">outln</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello World&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>In the example above, the output <code>Hello World</code> appears before. This is because the deferred scope is defined in the scope of the function and its execution is deferred until the scope of the function exits.</p><h2 id="unsafe-scopes" tabindex="-1">Unsafe Scopes <a class="header-anchor" href="#unsafe-scopes" aria-label="Permalink to &quot;Unsafe Scopes&quot;">​</a></h2><p>Unsafe scopes allows to use Unsafe Jule. Declares with the <code>unsafe</code> keyword.</p><p>For example:</p><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsafe</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Unsafe anonymous scope</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><a href="/unsafe-jule/">See more information about Unsafe Jule</a></p><h2 id="deferred-unsafe-scopes" tabindex="-1">Deferred Unsafe Scopes <a class="header-anchor" href="#deferred-unsafe-scopes" aria-label="Permalink to &quot;Deferred Unsafe Scopes&quot;">​</a></h2><p>You may want to use Unsafe Jule and deferred scopes at the same time. You can do this.</p><p>For example:</p><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">unsafe</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">defer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// Deferred unsafe anonymous scope</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,21),l=[p];function r(c,t,i,d,u,E){return e(),n("div",null,l)}const y=s(o,[["render",r]]);export{m as __pageData,y as default};
