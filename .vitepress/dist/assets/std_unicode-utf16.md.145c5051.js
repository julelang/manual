import{_ as s,o as e,c as n,Q as a}from"./chunks/framework.7cd3ab18.js";const h=JSON.parse('{"title":"std::unicode::utf16","description":"","frontmatter":{},"headers":[],"relativePath":"std/unicode-utf16.md","filePath":"std/unicode-utf16.md"}'),o={name:"std/unicode-utf16.md"},p=a('<h1 id="std-unicode-utf16" tabindex="-1">std::unicode::utf16 <a class="header-anchor" href="#std-unicode-utf16" aria-label="Permalink to &quot;std::unicode::utf16&quot;">​</a></h1><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">is_surrogate</span><span style="color:#E1E4E8;">(r: </span><span style="color:#F97583;">rune</span><span style="color:#E1E4E8;">): </span><span style="color:#F97583;">bool</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Reports whether the specified Unicode code point can appear in a surrogate pair.</p><hr><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">decode_rune</span><span style="color:#E1E4E8;">(r1: </span><span style="color:#F97583;">rune</span><span style="color:#E1E4E8;">, r2: </span><span style="color:#F97583;">rune</span><span style="color:#E1E4E8;">): </span><span style="color:#F97583;">rune</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Returns the UTF-16 decoding of a surrogate pair. If the pair is not a valid UTF-16 surrogate pair, decode_rune returns the Unicode replacement code point U+FFFD.</p><hr><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">encode_rune</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">mut</span><span style="color:#E1E4E8;"> r: </span><span style="color:#F97583;">rune</span><span style="color:#E1E4E8;">): (r1: </span><span style="color:#F97583;">rune</span><span style="color:#E1E4E8;">, r2: </span><span style="color:#F97583;">rune</span><span style="color:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Returns the UTF-16 surrogate pair r1, r2 for the given rune. If the rune is not a valid Unicode code point or does not need encoding, encode_rune returns U+FFFD, U+FFFD.</p><hr><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">encode</span><span style="color:#E1E4E8;">(s: []</span><span style="color:#F97583;">rune</span><span style="color:#E1E4E8;">): []</span><span style="color:#F97583;">u16</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Returns the UTF-16 encoding of the Unicode code point sequence s.</p><hr><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">decode</span><span style="color:#E1E4E8;">(s: []</span><span style="color:#F97583;">u16</span><span style="color:#E1E4E8;">): []</span><span style="color:#F97583;">rune</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Returns the Unicode code point sequence represented by the UTF-16 encoding s.</p><hr><div class="language-jule line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jule</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">fn</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">append_rune</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">mut</span><span style="color:#E1E4E8;"> a: []</span><span style="color:#F97583;">u16</span><span style="color:#E1E4E8;">, r: </span><span style="color:#F97583;">rune</span><span style="color:#E1E4E8;">): []</span><span style="color:#F97583;">u16</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Appends the UTF-16 encoding of the Unicode code point r to the end of p and returns the extended buffer. If the rune is not a valid Unicode code point, it appends the encoding of U+FFFD.</p>',19),l=[p];function r(t,c,i,d,u,E){return e(),n("div",null,l)}const F=s(o,[["render",r]]);export{h as __pageData,F as default};
