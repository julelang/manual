import{_ as a,o,c as n,k as e,a as t}from"./chunks/framework.7cd3ab18.js";const b=JSON.parse('{"title":"C","description":"","frontmatter":{},"headers":[],"relativePath":"integrated-jule/c.md","filePath":"integrated-jule/c.md"}'),i={name:"integrated-jule/c.md"},r=e("h1",{id:"c",tabindex:"-1"},[t("C "),e("a",{class:"header-anchor",href:"#c","aria-label":'Permalink to "C"'},"â€‹")],-1),s=e("p",null,"The C programming language is a language that is used in many systems and has a wide ecosystem, and we do not want it to be excluded from Jule's interoperability. We want codes developed in C to be able to run with Jule with minimal effort.",-1),c=e("p",null,"Jule and C can work together, but you should remember that your compiler will probably evaluate your C code according to C++ rules. If you have C code that is incompatible with C++, you may need to make changes in the relevant sections of code.",-1),l=e("p",null,[t("Use the "),e("code",null,"cpp"),t(" keyword to use your C definitions. This still remains a common keyword. Everything required for interoperability is the same.")],-1),d=[r,s,c,l];function u(h,m,p,_,f,y){return o(),n("div",null,d)}const w=a(i,[["render",u]]);export{b as __pageData,w as default};
