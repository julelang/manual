import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.7cd3ab18.js";const F=JSON.parse('{"title":"Using Reference Counting","description":"","frontmatter":{},"headers":[],"relativePath":"api/reference-counting/using.md","filePath":"api/reference-counting/using.md"}'),p={name:"api/reference-counting/using.md"},e=l(`<h1 id="using-reference-counting" tabindex="-1">Using Reference Counting <a class="header-anchor" href="#using-reference-counting" aria-label="Permalink to &quot;Using Reference Counting&quot;">​</a></h1><p>Include reference counting header:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;api/ref.hpp&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="creating-references" tabindex="-1">Creating References <a class="header-anchor" href="#creating-references" aria-label="Permalink to &quot;Creating References&quot;">​</a></h2><h3 id="nil-references" tabindex="-1">Nil References <a class="header-anchor" href="#nil-references" aria-label="Permalink to &quot;Nil References&quot;">​</a></h3><p>Recommended way:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::Ptr</span><span style="color:#F97583;">&lt;int&gt;</span><span style="color:#E1E4E8;"> my_int </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><hr><p>Using default constructor:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::Ptr</span><span style="color:#F97583;">&lt;int&gt;</span><span style="color:#E1E4E8;"> my_int;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="initialized-references" tabindex="-1">Initialized References <a class="header-anchor" href="#initialized-references" aria-label="Permalink to &quot;Initialized References&quot;">​</a></h3><p>Recommended way:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::Ptr</span><span style="color:#F97583;">&lt;int&gt;</span><span style="color:#E1E4E8;"> my_int </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">new_ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">&gt;(</span><span style="color:#79B8FF;">900</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::cout </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">my_int </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::endl;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><p>Create reference for custom allocation:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">my_alloc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">my_alloc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::Ptr</span><span style="color:#F97583;">&lt;int&gt;</span><span style="color:#E1E4E8;"> my_int </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">Ptr</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">&gt;::</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">(my_alloc);</span></span>
<span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::cout </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">my_int </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::endl;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="accessing-data" tabindex="-1">Accessing Data <a class="header-anchor" href="#accessing-data" aria-label="Permalink to &quot;Accessing Data&quot;">​</a></h2><p>Change data via assignment:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::Ptr</span><span style="color:#F97583;">&lt;int&gt;</span><span style="color:#E1E4E8;"> my_int </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">new_ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;">&gt;(</span><span style="color:#79B8FF;">900</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::cout </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">my_int </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::endl;</span></span>
<span class="line"><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">my_int </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1000</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;"> // my_int&#39;s data is now 1900</span></span>
<span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::cout </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">my_int </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::endl;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><hr><p>Get or set fields via <code>-&gt;</code> operator:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark"><code><span class="line"><span style="color:#F97583;">struct</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Person</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::Str name;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::Str surname;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::Ptr</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Person</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> p </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">jule</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">new_ref</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">Person</span><span style="color:#E1E4E8;">&gt;(Person{</span></span>
<span class="line"><span style="color:#E1E4E8;">    .name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Anonymous&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    .surname</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;Julenour&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::cout </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> p-&gt;name </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> p-&gt;surname </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::endl;</span></span>
<span class="line"><span style="color:#E1E4E8;">p-&gt;name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Unknown&quot;</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;"> // Set name field to &quot;Unkown&quot;</span></span>
<span class="line"><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::cout </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> p-&gt;name </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> p-&gt;surname </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::endl;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,22),o=[e];function t(r,c,E,i,y,u){return n(),a("div",null,o)}const b=s(p,[["render",t]]);export{F as __pageData,b as default};
